Version=2.2
NumberOfModules=0
Build1=Default,B4RDev
NumberOfFiles=0
NumberOfLibraries=5
Library1=rcore
Library2=resp8266
Library3=resp8266wifi
Library4=rmqtt
Library5=rdht
@EndOfDesignText@

#Region Project Attributes
	#AutoFlushLogs: True
	#CheckArrayBounds: True
	#StackBufferSize: 600
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'Public variables can be accessed from all modules.
	Public Serial1 As Serial
	Private d1pins As D1Pins
	Private pin16 As Pin
	Private d6 As Pin
	Private WiFi As ESP8266WiFi
	Private WiFiStr As WiFiSocket
	Private MQTT As MqttClient
	Private MQTTOpt As MqttConnectOptions
	Private MQTTUser As String = "vynckfaq"
	Private MQTTPassword As String = "KHSV1Q1qSUUY"
	Private MQTTHostName As String = "m14.cloudmqtt.com"
	Private MQTTPort As Int = 11816
	Private ESP As ESP8266
	Private WiFiSSID As String = "Rise Above This Home"
	Private WiFiPassword As String = "SteelReserve"
	Public DHT11sensor As dht                'DHT11 sensor
	Public Timer1 As Timer                    'Timer for reading DHT11 measures at desired interval
	Public DHT11pin As Pin                    ' ESP8266 Pin connected to DHT11 signal
	Public Interval As Int                    'Interval as seconds
	Private d3pins As D1Pins
	Dim humidity,temperature As Double        'Humidity/Temperature DHT11 readings
End Sub

Private Sub AppStart
	Serial1.Initialize(115200)
	Delay(3000)
	Log("AppStart")
	' Pin 2 is the blue LED
	' Pin 16 is the red LED
	' D6 = pin 12 is the logic/signal pin. Use 3.3v pin of Node MCU.
	
	pin16.Initialize(16, pin16.MODE_OUTPUT)
	d6.Initialize(d1pins.D6, d6.MODE_OUTPUT)
	
	Log("Stopping access point")
	RunNative("SetSTA", Null)
	
	' Connect to WiFi
	ConnectToWifi

	' Connect to CloudMQTT broker
	Dim ClientId As String = Rnd(0, 999999999) 'create a unique id
	MQTT.Initialize2(WiFiStr.stream, MQTTHostName, MQTTPort, ClientId, "MQTT_MessageArrived", "MQTT_Disconnected")
	MQTTOpt.Initialize(MQTTUser, MQTTPassword)
	MQTT_Connect(0)
	
	' Loop for DHT11 reading
	Interval = 5                                        '5 sec Timer Interval
	DHT11pin.Initialize(d3pins.D3, DHT11pin.MODE_INPUT)        'Initialize at Arduino Pin 3
	Timer1.Initialize("Timer1_Tick", Interval * 1000)
	Timer1.Enabled=True
End Sub

Sub Timer1_Tick
	DHT11sensor.Read11(DHT11pin.PinNumber)            'Reading the DHT11 measure
	humidity = DHT11sensor.GetHumidity + 12               'Get humidity from readed measure
	temperature = DHT11sensor.GetTemperature * 9 / 5 + 32         'Get temperature from readed measure
	Log("Humidity = ",humidity, " %", "  Temperature = ",temperature, " ºF")
	
	If WiFi.IsConnected Then
		Dim s As String  = JoinStrings(Array As String("Humidity = ",humidity, " %", "  Temperature = ",temperature, " ºF"))
		MQTT.Publish("Cloyd",s)
	End If
End Sub

Sub MQTT_Connect(Unused As Byte)
	If WiFi.IsConnected = False Then
		ConnectToWifi
	End If
	If MQTT.Connect = False Then
		Log("Connecting to broker")
		MQTT.Connect2(MQTTOpt)
		CallSubPlus("MQTT_Connect", 1000, 0)
	Else
		pin16.DigitalWrite(False)
		Log("Connected to broker")
		MQTT.Subscribe("Cloyd", 0)
	End If
End Sub

Sub mqtt_MessageArrived (Topic As String, Payload() As Byte)
	pin16.DigitalWrite(False)
	Log("Message arrived. Topic=", Topic, " Payload=", Payload)
	If Payload = "Restart controller" Then
		MQTT.Publish("Cloyd","*Restarting relay by remote")
		ESP.Restart
	End If
End Sub

Sub mqtt_Disconnected
	pin16.DigitalWrite(True)
	Log("Disconnected from broker")
	MQTT.Close
	MQTT_Connect(0)
End Sub

Sub ConnectToWifi
	WiFi.Connect2(WiFiSSID, WiFiPassword)

	If WiFi.IsConnected Then
		Log("Connected to WiFi, Local IP ", WiFi.LocalIp)
	Else
		Log("Not Connected to WiFi")
	End If
End Sub

#if C
void SetSTA(B4R::Object* o) {
   WiFi.mode(WIFI_STA);
}
#end if


